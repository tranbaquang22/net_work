Bài 1:
sử dụng thư viện concurrency, socket, threading, http.server 


Tracker Server: 
Giữ danh sách các client đã kết nối () và thông tin về các mảnh (piece) tệp mã mỗi client có 
(Một file lớn được chia ra thành nhiều mảnh, khi cần tải sẽ tải đồng thời (threading) 
các mảnh về và ghép lại thành tệp, việc ghép lại chưa cần làm)

Xử lý các yêu cầu từ client để chỉ định nguồn tệp từ các peer khác 


Client: 
Thông báo cho máy chủ thông tin về các tệp có sẵn trong kho lưu trữ của mình 
Gửi yêu cầu đến máy chủ khi cần tải tệp từ các client khác 
Xử lý đa luồng để tải dữ liệu từ nhiều client đồng thời 


Xây dựng tracker server như sau:
Cho phép 100 client kết nối (listen(100))
Tệp lưu thông tin có đuôi .torrent có thể là info.torrent, ....
Lắng nghe kết nối (khi client kết nối đến gửi thông tin client đó, tracker_id (cái này có thể gán cho nó dạng int auto tăng) IP và port và thông tin về mảnh lưu trữ)
Có thể gửi đến theo định dạng: piece.txt (Server sẽ lưu lại thông tin dạng IP, port, piece.txt)
Server trả về danh sách các piece được lưu thông tin từ server về client (để client có thể chọn tải hoặc không)

Server xử lý request đến:
down piece_n.txt  : server tìm piece và trả về client nào đang giữ mảnh về cho client (xử lý cả trường hợp piece được yêu cầu có sẵn trên client
, thì đưa ra message có sẵn rồi)
up piece_n.txt : server kiểm tra xem mảnh đó có lưu thông tin hay chưa? nếu chưa thì lưu thông tin, nếu có rồi thì gửi message về client 
n là số thứ tử mảnh

Client: Cũng đóng vai trò là server lắng nghe (tối đa 50 connect listen(50))
mỗi client có một folder lưu trữ riêng bằng cách khi kết nối đến server sẽ tạo một folder dạng IP_PORT
client theo dõi folder, nếu tệp thêm vào folder thì gửi thông báo đến server: up piece_n.txt n là số thứ tự mảnh 
client cần tải một file về  gửi yêu cầu đến server tracker để lấy thông tin về client đang giữ file (IP)
client gửi yêu cầu đến client khác thông qua IP và connect đến để tải file về folder, sau khi tải xong thì disconnect 

Giao diện: sử dụng tkinter, nên dùng ttk của tkinter cho UI đẹp hơn 
Trên server có một cái dạng log (log http hoặc log các request của người dùng hiển thị lên (có thể hiển thị lên textbox và không cho edit))
Một phần view khác xem thông tin file torrent 

Giao diện client: 
có thể upload và download, tìm kiếm file và download
Tìm kiếm file gửi đến server nếu có server trả về thông tin, nếu không trả về message hiển thị lên client 
Client cũng có log về phần các client khác connect, tải file và disconnect hiển thị lên messagebox


Bài 2:
Bước 1: Phân tích yêu cầu và lập kế hoạch
Phân tích chi tiết yêu cầu:

Bệnh viện có 2 tòa nhà (A và B), mỗi tòa có 5 tầng với 10 phòng, được trang bị máy tính và thiết bị y tế.
Trung tâm dữ liệu và các thiết bị IT khác được đặt trong phòng riêng.
Mạng có 600 máy trạm, 10 máy chủ, 12 thiết bị mạng và yêu cầu an ninh cao.
Cần phủ sóng không dây toàn bộ khu vực và kết nối các trang phụ bằng đường thuê bao.
Sử dụng các công nghệ hiện đại như cáp quang, GigaEthernet và thiết lập VPN.
Lập sơ đồ mạng:

Chia các khu vực thành các mạng con (subnet) dựa trên sơ đồ VLAN cho từng phòng ban.
Vẽ sơ đồ dự kiến về cách các tầng và tòa nhà sẽ kết nối với trung tâm dữ liệu.
Bước 2: Bắt đầu cấu hình trong Cisco Packet Tracer
Tạo sơ đồ mạng cơ bản:

Kéo và thả các thiết bị mạng như router, switch, và access point vào không gian làm việc.
Kết nối các tòa nhà A và B với nhau qua các switch chính và kết nối với trung tâm dữ liệu.
Thiết lập các access point không dây để đảm bảo phủ sóng toàn bộ khu vực.
Cấu hình các mạng con (subnet):

Dựa vào sơ đồ VLAN, phân chia các phòng ban trong tòa nhà thành các mạng con riêng biệt.
Cấu hình VLAN trên các switch để quản lý lưu lượng mạng nội bộ.
Kết nối WAN với các trang phụ:

Toàn bộ phần trên chỉ là viết config (ghi lại các command config từ đầu ra docs)

Sử dụng router để cấu hình kết nối WAN đến các trang phụ bằng đường thuê bao (leased lines). 
Cân nhắc sử dụng các công nghệ như SD-WAN hoặc MPLS nếu được yêu cầu.
Bước 3: Cấu hình bảo mật và quản lý (cấu hình code hoặc trên UI)
Cấu hình tường lửa (firewall) và các biện pháp bảo mật khác:

Thiết lập firewall để bảo vệ mạng khỏi các mối đe dọa bên ngoài.
Cấu hình các chính sách bảo mật, bao gồm phát hiện phishing và bảo mật truy cập dữ liệu.
Cấu hình VPN cho kết nối từ xa:

Tạo kết nối VPN site-to-site để nhân viên có thể kết nối an toàn từ xa.
Đảm bảo rằng kết nối VPN có mã hóa dữ liệu để tăng cường an ninh.
Bước 4: Kiểm tra và tối ưu hóa
Kiểm tra kết nối mạng:
Test bằng cách gửi gói tin qua lại

Bước 5: Viết báo cáo
Mô tả sơ đồ mạng: Giải thích chi tiết về sơ đồ đã thiết kế, các thiết bị sử dụng và cách chúng được kết nối. 
(viết docs giải thích ngắn gọn tại sao phải thiết kế như thế)
Giải thích cấu hình: Cung cấp chi tiết về cách đã cấu hình VLAN, bảo mật và kết nối WAN. 
Đề xuất và khuyến nghị: Nêu các khuyến nghị về việc mở rộng hoặc nâng cấp mạng trong tương lai. (Search)
